
Student.java


public class Student {
    private String rollNumber;
    private String name;
    private String course;
    private double gpa;

    public Student(String rollNumber, String name, String course, double gpa) {
        this.rollNumber = rollNumber;
        this.name = name;
        this.course = course;
        this.gpa = gpa;
    }

    public String getRollNumber() {
        return rollNumber;
    }

    public String getName() {
        return name;
    }

    public String getCourse() {
        return course;
    }

    public double getGpa() {
        return gpa;
    }
}


StudentManagementSystem.java


import java.util.ArrayList;
import java.util.Scanner;

public class StudentManagementSystem {
    private static ArrayList<Student> students = new ArrayList<>();
    private static Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) {
        while (true) {
            System.out.println("Student Management System");
            System.out.println("1. Add Student");
            System.out.println("2. Remove Student");
            System.out.println("3. Update Student");
            System.out.println("4. View Students");
            System.out.println("5. Exit");

            System.out.print("Enter choice: ");
            int choice = scanner.nextInt();
            scanner.nextLine(); // Consume newline left-over

            switch (choice) {
                case 1:
                    addStudent();
                    break;
                case 2:
                    removeStudent();
                    break;
                case 3:
                    updateStudent();
                    break;
                case 4:
                    viewStudents();
                    break;
                case 5:
                    System.out.println("Exiting...");
                    return;
                default:
                    System.out.println("Invalid choice!");
            }
        }
    }

    private static void addStudent() {
        System.out.print("Enter roll number: ");
        String rollNumber = scanner.nextLine();
        System.out.print("Enter name: ");
        String name = scanner.nextLine();
        System.out.print("Enter course: ");
        String course = scanner.nextLine();
        System.out.print("Enter GPA: ");
        double gpa = scanner.nextDouble();
        scanner.nextLine(); // Consume newline left-over

        Student student = new Student(rollNumber, name, course, gpa);
        students.add(student);
        System.out.println("Student added successfully!");
    }

    private static void removeStudent() {
        System.out.print("Enter roll number: ");
        String rollNumber = scanner.nextLine();

        for (Student student : students) {
            if (student.getRollNumber().equals(rollNumber)) {
                students.remove(student);
                System.out.println("Student removed successfully!");
                return;
            }
        }
        System.out.println("Student not found!");
    }

    private static void updateStudent() {
        System.out.print("Enter roll number: ");
        String rollNumber = scanner.nextLine();

        for (Student student : students) {
            if (student.getRollNumber().equals(rollNumber)) {
                System.out.print("Enter new name: ");
                student.name = scanner.nextLine();
                System.out.print("Enter new course: ");
                student.course = scanner.nextLine();
                System.out.print("Enter new GPA: ");
                student.gpa = scanner.nextDouble();
                scanner.nextLine(); // Consume newline left-over
                System.out.println("Student updated successfully!");
                return;
            }
        }
        System.out.println("Student not found!");
    }

    private static void viewStudents() {
        System.out.println("Students:");
        for (Student student : students) {
            System.out.println("Roll Number: " + student.getRollNumber());
            System.out.println("Name: " + student.getName());
            System.out.println("Course: " + student.getCourse());
            System.out.println("GPA: " + student.getGpa());
            System.out.println();
        }
    }
}


Features:

1. Add students
2. Remove students
3. Update student details
4. View all students
5. Exit

Example usage:


Student Management System
1. Add Student
2. Remove Student
3. Update Student
4. View Students
5. Exit
Enter choice: 1
Enter roll number: S101
Enter name: John Doe
Enter course: Computer Science
Enter GPA: 3.5
Student added successfully!

